# Generated by Django 4.1.4 on 2023-04-12 21:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_auth_id', models.CharField(max_length=255, null=True)),
                ('client_name', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyServiceRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'company_service_relationship',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=255, null=True)),
                ('text_address', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_number', models.CharField(max_length=255, null=True)),
                ('add_on_price', models.IntegerField(default=0)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Active'), (0, 'Not_Active')])),
                ('recharge_date', models.DateField()),
                ('balance', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('area', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'locality',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('price_monthly', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'package',
            },
        ),
        migrations.CreateModel(
            name='PaymentMode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_mode',
            },
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_collected', models.PositiveSmallIntegerField(choices=[(1, 'Yes'), (0, 'No')])),
                ('payment_amount', models.IntegerField(blank=True, null=True)),
                ('payment_date', models.DateField()),
                ('recharge_entry', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'recharge',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='service_name_297e77_idx'),
        ),
        migrations.AddField(
            model_name='recharge',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.device'),
        ),
        migrations.AddField(
            model_name='recharge',
            name='payment_mode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.paymentmode'),
        ),
        migrations.AddField(
            model_name='package',
            name='company_service_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.companyservicerelationship'),
        ),
        migrations.AddField(
            model_name='locality',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.client'),
        ),
        migrations.AddField(
            model_name='device',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.customer'),
        ),
        migrations.AddField(
            model_name='device',
            name='locality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.locality'),
        ),
        migrations.AddField(
            model_name='device',
            name='package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.package'),
        ),
        migrations.AddField(
            model_name='customer',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.client'),
        ),
        migrations.AddField(
            model_name='customer',
            name='locality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.locality'),
        ),
        migrations.AddField(
            model_name='companyservicerelationship',
            name='company_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.company'),
        ),
        migrations.AddField(
            model_name='companyservicerelationship',
            name='service_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.service'),
        ),
        migrations.AddField(
            model_name='company',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dandhacontrol.client'),
        ),
        migrations.AddField(
            model_name='company',
            name='company_service',
            field=models.ManyToManyField(through='dandhacontrol.CompanyServiceRelationship', to='dandhacontrol.service'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['client_auth_id'], name='client_client__81bcd7_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['client_name'], name='client_client__661db1_idx'),
        ),
        migrations.AddIndex(
            model_name='package',
            index=models.Index(fields=['name'], name='package_name_92a55c_idx'),
        ),
        migrations.AddIndex(
            model_name='locality',
            index=models.Index(fields=['area'], name='locality_area_75c12e_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['customer_name'], name='customer_custome_f4a664_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['company_name'], name='company_company_01255b_idx'),
        ),
    ]
